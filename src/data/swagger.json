{
  "openapi": "3.0.0",
  "info": {
    "title": "AI Prompt Backend API",
    "version": "1.0.0",
    "description": "API documentation for AI prompt backend using Node.js, TypeScript and MongoDB"
  },
  "servers": [
    {
      "url": "https://ai-prompt-backend.onrender.com/api",
      "description": "Live server"
    },
    {
      "url": "http://localhost:5000/api",
      "description": "Development server"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "User signup (sends verification email)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" },
                  "confirmPassword": { "type": "string" }
                },
                "required": ["name", "email", "password", "confirmPassword"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Signup successful, verification email sent"
          },
          "400": { "description": "Validation or email already in use" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User login (only verified users allowed)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully with JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "accessToken": { "type": "string" },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "email": { "type": "string" },
                        "name": { "type": "string" },
                        "role": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials or email not verified"
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Refresh access token using refresh token cookie",
        "responses": {
          "200": {
            "description": "New access token generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Refresh token not provided"
          },
          "403": {
            "description": "Invalid or expired refresh token"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user and invalidate refresh token",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify-email": {
      "get": {
        "summary": "Verify email address",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "description": "Verification token sent via email"
          }
        ],
        "responses": {
          "200": { "description": "Email verified successfully" },
          "400": { "description": "Invalid or expired token" }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "summary": "Request password reset email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Reset email sent" },
          "400": { "description": "User not found" }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "summary": "Reset password with token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": { "type": "string" },
                  "newPassword": { "type": "string" }
                },
                "required": ["token", "newPassword"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Password reset successful" },
          "400": { "description": "Invalid or expired token" }
        }
      }
    },
    "/prompts": {
      "get": {
        "summary": "Get all user prompts",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number for pagination"
          },
          {
            "name": "size",
            "in": "query",
            "schema": { "type": "integer", "default": 10 },
            "description": "Number of prompts per page"
          },
          {
            "name": "search",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Search term for title"
          }
        ],
        "responses": {
          "200": {
            "description": "List of user prompts with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Prompt" }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": { "type": "integer" },
                        "page": { "type": "integer" },
                        "size": { "type": "integer" },
                        "totalPages": { "type": "integer" }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "summary": "Create new prompt",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "content": { "type": "string" },
                  "userId": {
                    "type": "string",
                    "description": "Only admin can assign a different userId"
                  }
                },
                "required": ["title", "content"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Prompt created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden (not admin)" }
        }
      }
    },
    "/prompts/{id}": {
      "put": {
        "summary": "Update a prompt",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "content": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Prompt updated" },
          "401": { "description": "Unauthorized" }
        }
      },
      "delete": {
        "summary": "Delete a prompt",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "Prompt deleted" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/chat": {
      "post": {
        "summary": "Chat with custom prompts",
        "description": "Send a message to the system. It will respond using stored custom prompts (rule-based or template-based). Also creates or associates a tag for this chat.",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "How are you?"
                  }
                },
                "required": ["message"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AI-like response from custom prompt",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "How are you?" },
                    "reply": {
                      "type": "string",
                      "example": "I'm good, thanks!"
                    },
                    "prompts": {
                      "type": "array",
                      "items": { "type": "string" },
                      "example": ["Greeting Prompt"]
                    },
                    "tag": {
                      "$ref": "#/components/schemas/Tag"
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/chat/tags": {
      "get": {
        "summary": "List all tags",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of tags",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Tag" }
                }
              }
            }
          }
        }
      }
    },
    "/chat/tags/{tagId}/history": {
      "get": {
        "summary": "Get chat history by tag ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Tag ID to filter chat history"
          }
        ],
        "responses": {
          "200": {
            "description": "Chat history under this tag",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ChatHistory" }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Access Token for authentication"
      }
    },
    "schemas": {
      "Prompt": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Unique identifier" },
          "title": { "type": "string", "description": "Prompt title" },
          "content": { "type": "string", "description": "Prompt content" },
          "userId": { "type": "string", "description": "Owner user ID" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Created timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Updated timestamp"
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      },
      "ForbiddenError": {
        "description": "Not enough permissions to access the resource"
      }
    }
  }
}
